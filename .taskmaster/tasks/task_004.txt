# Task ID: 4
# Title: 단어 및 예문 데이터 구축 및 Firestore에 저장
# Status: done
# Dependencies: 3
# Priority: high
# Description: 초기 500개 단어와 단어별 3개 이상의 예문 데이터를 생성하고, 이를 Firestore에 업로드하는 스크립트를 작성합니다.
# Details:
1. 500개의 핵심 한국어 단어를 선정합니다.
2. 각 단어에 대해 시제, 능/수동태를 포함한 다양한 문법적 상황의 예문 3개 이상을 한국어, 영어, 독일어로 작성합니다.
3. 이 데이터를 `[ { kor: '...', eng: '...', ger: '...', examples: [ ... ] }, ... ]` 형식의 JSON 파일로 구조화합니다.
4. Node.js 환경에서 실행할 수 있는 일회성 스크립트(`scripts/uploadWords.js`)를 작성하여 JSON 데이터를 읽고 Firestore `vocabularies` 컬렉션에 일괄적으로 업로드합니다.

# Test Strategy:
업로드 스크립트 실행 후 Firestore 콘솔에서 500개의 단어 문서가 `vocabularies` 컬렉션에 올바르게 생성되었는지 확인합니다. 각 문서에 `examples` 필드가 3개 이상의 예문 객체 배열로 채워져 있는지 샘플링하여 검증합니다.

# Subtasks:
## 1. 핵심 한국어 단어 500개 선정 [done]
### Dependencies: None
### Description: 초기 데이터 구축을 위해 학습 및 활용도가 높은 500개의 핵심 한국어 단어를 선정합니다.
### Details:
한국어 학습용 어휘 목록, 교육 필수 어휘, 빈도 기반 어휘집 등 신뢰할 수 있는 자료를 참고하여 500개의 단어를 선정합니다. 선정 기준은 난이도, 활용도, 품사 다양성 등을 고려합니다.

## 2. 각 단어별 예문 3개 이상 작성 (한국어/영어/독일어) [done]
### Dependencies: 4.1
### Description: 선정된 각 단어에 대해 시제, 능/수동태 등 다양한 문법 상황을 반영한 예문을 3개 이상씩 작성하고, 이를 한국어, 영어, 독일어로 번역합니다.
### Details:
각 단어별로 실제 사용 맥락을 반영한 예문을 3개 이상 작성합니다. 예문은 시제, 능동/수동, 긍정/부정 등 다양한 문법적 상황을 포함해야 하며, 각 예문은 한국어, 영어, 독일어로 모두 제공되어야 합니다.

## 3. 데이터 JSON 파일 구조화 [done]
### Dependencies: 4.2
### Description: 작성된 단어 및 예문 데이터를 지정된 JSON 포맷으로 구조화합니다.
### Details:
데이터를 `[ { kor: '...', eng: '...', ger: '...', examples: [ ... ] }, ... ]` 형식의 JSON 파일로 변환합니다. 각 예문은 예문별로 세 언어가 모두 포함된 구조로 정리합니다.

## 4. Firestore 업로드 스크립트 작성 (Node.js) [done]
### Dependencies: 4.3
### Description: Node.js 환경에서 JSON 데이터를 Firestore의 'vocabularies' 컬렉션에 일괄 업로드하는 스크립트를 작성합니다.
### Details:
`scripts/uploadWords.js` 파일을 생성하여, JSON 파일을 읽고 Firestore에 각 단어 데이터를 일괄 업로드하는 로직을 구현합니다. Firestore 인증 및 예외 처리도 포함합니다.

## 5. 최종 데이터 검증 및 업로드 결과 확인 [done]
### Dependencies: 4.4
### Description: Firestore에 업로드된 데이터의 정확성과 완전성을 검증합니다.
### Details:
Firestore 콘솔 또는 쿼리를 통해 업로드된 데이터가 누락 없이 저장되었는지, 각 필드가 올바르게 입력되었는지 확인합니다. 필요시 샘플 데이터를 조회하여 예문, 번역, 구조 등이 정확한지 검토합니다.

