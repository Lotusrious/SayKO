# Task ID: 22
# Title: 5단계 복습 사이클 로직 구현
# Status: done
# Dependencies: 9
# Priority: high
# Description: 단어 수에 기반한 5단계 복습 사이클 로직을 구현하여 사용자가 효과적으로 단어를 학습할 수 있도록 합니다.
# Details:
1. 5단계 복습 사이클의 구조를 정의합니다:
   - 사이클 1: 하루 25단어씩 20일 (총 500단어)
   - 사이클 2: 하루 50단어씩 10일 (총 500단어)
   - 사이클 3: 하루 100단어씩 5일 (총 500단어)
   - 사이클 4: 하루 250단어씩 2일 (총 500단어)
   - 사이클 5: 하루 500단어씩 1일 (총 500단어)
   - 사이클 5 이후에는 다시 사이클 1로 돌아가 반복

2. `services/reviewService.ts` 파일을 생성하여 복습 사이클 관련 기능을 구현합니다:
   - `getCurrentCycleInfo(userId: string): Promise<CycleInfo>` - 현재 사용자의 사이클 정보 조회
   - `getWordsForToday(userId: string): Promise<Word[]>` - 오늘 학습해야 할 단어 목록 조회
   - `getTestWords(userId: string): Promise<Word[]>` - 오늘 테스트할 랜덤 25개 단어 선택
   - `updateCycleProgress(userId: string): Promise<void>` - 학습 완료 후 사이클 진행 상태 업데이트

3. Firestore의 `users/{userId}/cycleProgress` 문서에 사용자의 사이클 진행 상태를 저장합니다:
   ```typescript
   interface CycleProgress {
     currentCycle: number; // 1-5 사이클
     currentDay: number; // 각 사이클 내 현재 일차
     completedWords: string[]; // 완료한 단어 ID 목록
     lastStudyDate: Timestamp; // 마지막 학습 날짜
     testResults: {
       date: Timestamp;
       wordId: string;
       isCorrect: boolean;
     }[];
   }
   ```

4. 각 사이클별 일일 학습량에 따라 단어를 분배하는 알고리즘을 구현합니다:
   - 전체 단어 풀에서 아직 학습하지 않은 단어를 우선 선택
   - 사이클과 일차에 따라 적절한 수의 단어를 선택하는 로직 구현
   - 사이클 5 완료 후 다시 사이클 1로 돌아가는 순환 구조 구현

5. 학습 사이클 로직(Task 9)과 통합하여 사용자의 일일 학습 단어를 제공하는 기능을 구현합니다.

6. 테스트 기능 구현:
   - 그날 학습한 단어 중에서 랜덤으로 25개를 선택하는 알고리즘
   - 테스트 결과를 저장하고 통계를 제공하는 기능
   - 테스트 결과에 따른 학습 진행 상황 시각화

# Test Strategy:
1. 단위 테스트:
   - `getCurrentCycleInfo` 함수가 사용자의 현재 사이클 정보를 정확히 반환하는지 테스트
   - `getWordsForToday` 함수가 사이클과 일차에 맞는 적절한 수의 단어를 반환하는지 테스트
   - `getTestWords` 함수가 학습한 단어 중 랜덤하게 25개를 선택하는지 테스트
   - `updateCycleProgress` 함수가 학습 진행 상태를 올바르게 업데이트하는지 테스트

2. 통합 테스트:
   - 모의 사용자 데이터로 전체 5단계 사이클을 시뮬레이션하여 각 단계가 올바르게 진행되는지 확인
   - 사이클 5 완료 후 사이클 1로 돌아가는 순환 구조가 정상 작동하는지 확인
   - 여러 날짜에 걸친 학습 진행이 정확히 추적되는지 확인

3. 사용자 시나리오 테스트:
   - 사용자가 매일 적절한 수의 단어를 학습하고 테스트받을 수 있는지 확인
   - 학습 중단 후 재개했을 때 이전 진행 상태가 올바르게 복원되는지 확인
   - 여러 사이클에 걸쳐 모든 단어(500개)가 학습되는지 확인

4. 성능 테스트:
   - 대량의 단어(500개 이상)가 있을 때 일일 학습 단어 조회 성능 측정
   - 사이클 진행 상태 업데이트 작업의 지연 시간 측정
   - 테스트용 랜덤 단어 선택 알고리즘의 성능 측정
